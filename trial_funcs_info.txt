
def trial_1(x_train, y_train, x_test, y_test):
    """
    Trial 1: Baseline model with manually selected hyperparameters.
    Utilizes parameters loaded from a file to ensure optimal settings.
    """
    params = load_params_from_file()  # Load parameters from file
    return train_and_evaluate_model(x_train, y_train, x_test, y_test, params)

def trial_2(x_train, y_train, x_test, y_test):
    """
    Trial 2: Parameters adjusted based on GridSearchCV findings.
    Applies the best parameters found in the previous grid search.
    """
    params = load_params_from_file()  # Load parameters from file
    return train_and_evaluate_model(x_train, y_train, x_test, y_test, params)

def trial_3(x_train, y_train, x_test, y_test):
    """
    Trial 3: No condo data, treating "levels" as categorical.
    Focuses on single-family homes and uses encoded levels.
    """
    params = load_params_from_file()  # Load parameters from file
    return train_and_evaluate_model(x_train, y_train, x_test, y_test, params)

def trial_4(x_train, y_train, x_test, y_test):
    """
    Trial 4: Excludes condos and "levels" data, simplifying the feature set.
    Tests the impact of a streamlined dataset on model performance.
    """
    params = load_params_from_file()  # Load parameters from file
    return train_and_evaluate_model(x_train, y_train, x_test, y_test, params)

def trial_5(x_train, y_train, x_test, y_test):
    """
    Trial 5: No condos, no "levels", with SqFt outliers removed.
    Aims to refine the dataset by removing extreme outlier values.
    """
    params = load_params_from_file()  # Load parameters from file
    return train_and_evaluate_model(x_train, y_train, x_test, y_test, params)
